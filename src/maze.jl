#Maze20 from http://pomdp.org/examples/milos-aaai97.POMDP.gz, modified with wait action

struct Maze20POMDP <: POMDP{Int,Int,Int}
    T::Vector{Matrix{Float64}}
    O::Vector{Matrix{Float64}}
    action_order::NTuple{4, Symbol}
end


function Maze20POMDP()
    T_1 = [0.15 0.15 0 0 0 0.7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.15 0.7 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0.15 0.7 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0.15 0 0.15 0 0 0 0.7 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0.15 0.85 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0.15 0.15 0 0 0 0.7 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0.15 0.15 0 0 0 0 0.7 0 0 0 0 0 0 0 0 
    0.3 0 0 0 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 
    0 0 0 0 0 0 0 0 0.85 0.15 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0.15 0.15 0 0 0 0 0.7 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0.15 0.15 0 0 0 0.7 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0.15 0.85 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0.3 0 0 0 0 0.7 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.15 0 0 0 0.7 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.85 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0.15 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.7 0.15 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.7 0.15 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.7 0.15 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.85 ]
    T_2 = [0.85 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.15 0.7 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0.15 0.7 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0.15 0.7 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0.15 0.85 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.7 0 0 0 0 0.15 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0.15 0.85 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.3 0 0 0 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 
    0 0 0 0.7 0 0 0 0 0.15 0.15 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0.15 0.85 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0.7 0 0 0 0 0.15 0.15 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0.7 0 0 0 0.15 0.15 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0.7 0 0 0 0 0.3 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0.15 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0.7 0 0 0 0.15 0.15 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0.7 0 0 0 0 0.15 0.15 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.7 0.15 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0.7 0 0 0 0.15 0 0.15 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.7 0 0 0 0.15 0 0.15 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.85]
    T_3 = [0.15 0.7 0 0 0 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0.3 0.7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0.3 0.7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0.15 0.7 0 0 0 0.15 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 1.0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.15 0 0 0 0 0 0.7 0 0 0 0.15 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0.85 0 0 0 0 0.15 0 0 0 0 0 0 0 0 
    0.3 0 0 0 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 
    0 0 0 0.15 0 0 0 0 0.15 0.7 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0.85 0 0 0 0 0.15 0 0 0 0 0 
    0 0 0 0 0 0.15 0 0 0 0 0 0.7 0 0 0 0.15 0 0 0 0 
    0 0 0 0 0 0 0.15 0 0 0 0 0.85 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0.15 0 0 0 0 0.7 0 0 0 0 0.15 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0.7 0 0 0 0.15 0 
    0 0 0 0 0 0 0 0 0 0.15 0 0 0 0 0.85 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0 0.15 0.7 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.7 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0 0.15 0.7 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0 0.15 0.7 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1.0 ]
    T_4 = [0.85 0 0 0 0 0.15 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.7 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0.7 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0.7 0.15 0 0 0 0 0.15 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0.7 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
    0.15 0 0 0 0 0.7 0 0 0 0 0.15 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0.7 0.15 0 0 0 0 0.15 0 0 0 0 0 0 0 0 
    0.3 0 0 0 0.3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 
    0 0 0 0.15 0 0 0 0 0.85 0 0 0 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0.7 0.15 0 0 0 0 0.15 0 0 0 0 0 
    0 0 0 0 0 0.15 0 0 0 0 0.7 0 0 0 0 0.15 0 0 0 0 
    0 0 0 0 0 0 0.15 0 0 0 0.7 0.15 0 0 0 0 0 0 0 0 
    0 0 0 0 0 0 0 0.15 0 0 0 0 0.7 0 0 0 0 0.15 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0 0 0 0 0.15 0 
    0 0 0 0 0 0 0 0 0 0.15 0 0 0 0.7 0.15 0 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0 0.85 0 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.7 0.3 0 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0.7 0.15 0 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0 0 0 0.7 0.15 0 
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.7 0.3 ]
    T_57 = Matrix(Diagonal(ones(20)))
    O_14 = Float64.([1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0 
    1 0 0 0 0 0 0 0])
    O_5 = [0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.05 0.1 0.1 0.75 0 0 0 
    0 0.05 0.1 0.1 0.75 0 0 0 
    0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.05 0.1 0.1 0.75 0 0 0 
    0 0.89 0.05 0.05 0.01 0 0 0 
    0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.89 0.05 0.05 0.01 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.89 0.05 0.05 0.01 0 0 0 
    0 0.14 0.01 0.8 0.05 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.05 0.1 0.1 0.75 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.14 0.8 0.01 0.05 0 0 0 
    0 0.05 0.1 0.1 0.75 0 0 0]
    O_6 = [0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.14 0 0 0 0.8 0.01 0.05 
    0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.14 0 0 0 0.8 0.01 0.05 
    0 0.05 0 0 0 0.1 0.1 0.75 
    0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.14 0 0 0 0.8 0.01 0.05 
    0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.14 0 0 0 0.8 0.01 0.05 
    0 0.05 0 0 0 0.1 0.1 0.75 
    0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.14 0 0 0 0.8 0.01 0.05 
    0 0.14 0 0 0 0.01 0.8 0.05 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.89 0 0 0 0.05 0.05 0.01 
    0 0.14 0 0 0 0.8 0.01 0.05]
    return Maze20POMDP([T_1,T_2,T_3,T_4,T_57],[O_14,O_5,O_6],(:N,:S,:E,:W))
end

POMDPs.states(m::Maze20POMDP) = 1:20
POMDPs.stateindex(m::Maze20POMDP,s::Int) = s 
POMDPs.actions(m::Maze20POMDP) = 1:7
POMDPs.actionindex(m::Maze20POMDP,a::Int) = a

function POMDPs.transition(m::Maze20POMDP, s::Int, a::Int)
    if a < 5
        return SparseCat(1:20,m.T[a][s,:])
    else
        return SparseCat(1:20,m.T[5][s,:])
    end
end

function POMDPs.reward(m::Maze20POMDP,s::Int,a::Int,sp::Int)
    if s!=sp && sp==7
        return 1000.0
    else
        return 0.0
    end
end

POMDPs.reward(m::Maze20POMDP,s::Int,a::Int) = POMDPTools.ModelTools.mean_reward(m,s,a)

function POMDPs.observation(m::Maze20POMDP, a::Int, sp::Int)
    if a < 5
        return SparseCat(1:8,m.O[1][sp,:])
    else
        return SparseCat(1:8,m.O[a-4][sp,:])
    end
end
POMDPs.observations(m::Maze20POMDP) = 1:8
POMDPs.obsindex(m::Maze20POMDP,o::Int) = o


POMDPs.initialstate(m::Maze20POMDP) = SparseCat(1:20,append!([0.3,0.0,0.0,0.0,0.3],fill(0,14),0.4)) #From MiniHallway.jl
POMDPs.isterminal(m::Maze20POMDP,s::Int) = s==7
POMDPs.discount(m::Maze20POMDP) = 0.9999

##Constrained
struct Maze20CPOMDP{V<:AbstractVector} <: CPOMDP{Int,Int,Int}
    m::Maze20POMDP
    constraints::V
end

@POMDP_forward Maze20CPOMDP.m

Maze20CPOMDP(ĉ=[1.0]; kwargs...) = Maze20CPOMDP(Maze20POMDP(;kwargs...),ĉ)

ConstrainedPOMDPs.constraints(p::Maze20CPOMDP) = p.constraints

function ConstrainedPOMDPs.costs(p::Maze20CPOMDP, s, a)
    if a < 7
        c = 1.0
    else
        c = 0.0
    end
    return c
end